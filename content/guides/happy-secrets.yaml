# Kubernetes Secret for Happy Server
# Save this file and apply with: kubectl apply -f happy-secrets.yaml

apiVersion: v1
kind: Secret
metadata:
  name: happy-secrets
type: Opaque
stringData:
  # Database Configuration
  DATABASE_URL: "postgresql://postgres:postgres@postgres-service:5432/handy"
  
  # Redis Configuration  
  REDIS_URL: "redis://redis-service:6379"
  
  # Application Configuration
  SEED: "your-secure-seed-for-token-generation-change-this"
  PORT: "3005"
  NODE_ENV: "production"

---
# Optional: If you want to deploy PostgreSQL and Redis in the same cluster
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: "handy"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
      volumes:
      - name: redis-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
